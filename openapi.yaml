openapi: 3.0.1
info:
  title: Starling Bank API
  description: |-
    OpenAPI specification for the Starling Bank Public API.

    For more information visit: https://developer.starlingbank.com/docs
  version: 1.0.0
servers:
  - url: /
paths:
  /api/v2/accounts/{accountUid}/balance:
    get:
      tags:
        - Accounts
      summary: Get an account's balance
      description: |-
        The account balance is expressed in two ways: cleared balance and effective balance.
        * The **cleared balance** is the balance of settled transactions and so does not include pending transactions. The cleared end of day balance is used to calculate interest.
        * The **effective balance** is the balance of settled and pending outgoing transactions. This is the balance most commonly presented to the account holder (e.g. in-app).

        `clearedBalance` and `effectiveBalance` hold the values for the main account only, excluding balances in spaces, savings goals etc. `totalClearedBalance` and `totalEffectiveBalance` hold the corresponding values totalled across the main account and all spaces, savings goals etc.

        Many payment types settle almost instantly (e.g. faster payments). Card transactions usually take a few days to settle and will remain pending for this time. We've got a blog post on [how card transactions work](https://www.starlingbank.com/blog/card-transactions-explained/).

        To check whether the account has enough money to make a payment, use the confirmation of funds endpoint instead.
      operationId: getAccountBalance
      parameters:
        - name: accountUid
          in: path
          description: Account uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceV2"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - balance:read
  /api/v2/accounts:
    get:
      tags:
        - Accounts
      summary: Get the accounts associated with an account holder
      description: |-
        This endpoint returns a list of the accounts that you can access using the access token you supplied in the request header.

        Each access token is associated with a single account holder, who may have more than one account (for example, a GBP account and a euro account). This endpoint returns all the accounts that the account holder has given you permission to access.

        Note that an account holder in this context is either a personal account holder, or a sole trader account holder, or a business account holder or a joint account holder. An individual person may be more than one of these kinds of account holder, but each kind of account holder is a separate entity and hence requires a separate access token and permission.

        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: getAccounts
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - account:read
            - account-list:read
  /api/v2/feed/account/{accountUid}/category/{categoryUid}/transactions-between:
    get:
      tags:
        - Transaction Feed
      summary:
        "Get the account holder's feed items for the specified category, which\
        \ were created between two timestamps"
      description: |-
        Categories are subdivisions of an account.
        The default category holds the main balance and transactions. Savings goals and spending spaces are examples of other categories. You can use [`/api/v2/accounts`](#operations-tag-Accounts) to get the default category UID for an account.
      operationId: queryFeedItemsByCategoryWithTransactionTimesBetween
      parameters:
        - name: accountUid
          in: path
          description: Account uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        - name: categoryUid
          in: path
          description: Category uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        - name: minTransactionTimestamp
          in: query
          description: Minimum transaction timestamp
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date-time
          example: 2020-06-01T12:34:56.000Z
        - name: maxTransactionTimestamp
          in: query
          description: Maximum transaction timestamp
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date-time
          example: 2020-07-01T12:34:56.000Z
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedItems"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - transaction:read
  /api/v2/account/{accountUid}/savings-goals:
    get:
      tags:
        - Savings Goals
      summary: Get all savings goals
      operationId: getSavingsGoals
      parameters:
        - name: accountUid
          in: path
          description: Account uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavingsGoalsV2"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - savings-goal:read
    put:
      tags:
        - Savings Goals
      summary: Create a savings goal
      operationId: createSavingsGoal
      parameters:
        - name: accountUid
          in: path
          description: Account uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Savings goal request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavingsGoalRequestV2"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrUpdateSavingsGoalResponseV2"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - savings-goal:create
  /api/v2/account/{accountUid}/savings-goals/{savingsGoalUid}/add-money/{transferUid}:
    put:
      tags:
        - Savings Goals
      summary: Add money into a savings goal
      operationId: addMoney
      parameters:
        - name: accountUid
          in: path
          description: Account uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        - name: savingsGoalUid
          in: path
          description: Savings goal uid
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        - name: transferUid
          in: path
          description: "Transfer uid, generated by the caller"
          required: true
          style: simple
          explode: false
          schema:
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            type: string
            format: uuid
            example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
      requestBody:
        description: Top up request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopUpRequestV2"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavingsGoalTransferResponseV2"
        "4xx":
          description:
            "Client error. See [API status codes](#api-status-codes-1)\
            \ for more details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5xx":
          description:
            "Server error. See [API status codes](#api-status-codes-1)\
            \ for more details."
      security:
        - Bearer:
            - savings-goal-transfer:create

components:
  schemas:
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
          description: The error message
          example: Something about the error
      description: Detail of the error
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorDetail"
        success:
          type: boolean
          example: false
      description: Erroneous response wrapper
    BalanceV2:
      type: object
      properties:
        clearedBalance:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        effectiveBalance:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        pendingTransactions:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        acceptedOverdraft:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        amount:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        totalClearedBalance:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
        totalEffectiveBalance:
          $ref: "#/components/schemas/SignedCurrencyAndAmount"
      description: Balance details
    SignedCurrencyAndAmount:
      required:
        - currency
        - minorUnits
      type: object
      properties:
        currency:
          minLength: 1
          type: string
          description: ISO-4217 3 character currency code
          example: GBP
        minorUnits:
          minimum: -9223372036854775808
          type: integer
          description:
            "Amount in the minor units of the given currency; eg pence\
            \ in GBP, cents in EUR"
          format: int64
          example: 123456
    AccountIdentifier:
      type: object
      properties:
        identifierType:
          type: string
          description: The type of account identifier
          example: SORT_CODE
          enum:
            - SORT_CODE
            - IBAN_BIC
            - ABA_ACH
        bankIdentifier:
          type: string
          description:
            "Identifier to uniquely identify the bank, e.g. a sort code\
            \ or BIC"
          example: "608371"
        accountIdentifier:
          type: string
          description:
            "Identifier to uniquely identify the account at the bank, e.g.\
            \ an account number or IBAN"
          example: "47675488"
      description: Bank and account identifiers for a particular identifier type
    AccountIdentifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: Identifier to uniquely identify the account at the bank
          example: "01234567"
        bankIdentifier:
          type: string
          description: Identifier to uniquely identify the bank
          example: "608371"
        iban:
          type: string
          description:
            International identifier to uniquely identify the account at
            the bank
          example: GB63SRLG60837101234567
        bic:
          type: string
          description: International identifier to uniquely identify the bank
          example: SRLGGB2L
        accountIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AccountIdentifier"
      description: Bank account identifiers
    AccountV2:
      type: object
      properties:
        accountUid:
          type: string
          format: uuid
          example: bbccbbcc-bbcc-bbcc-bbcc-bbccbbccbbcc
        accountType:
          type: string
          example: PRIMARY
          enum:
            - PRIMARY
            - ADDITIONAL
            - LOAN
            - FIXED_TERM_DEPOSIT
            - SAVINGS
        defaultCategory:
          type: string
          format: uuid
          example: ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd
        currency:
          type: string
          example: GBP
          enum:
            - UNDEFINED
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RUR
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SLE
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XCG
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
            - ZWG
        createdAt:
          type: string
          format: date-time
        name:
          type: string
          example: Personal
      description: Bank account details
    Accounts:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/AccountV2"
      description: The accounts of an account holder
    AddressV2:
      required:
        - countryCode
        - line1
        - postCode
        - postTown
      type: object
      properties:
        line1:
          type: string
          example: 1A Admiralty Arch
        line2:
          type: string
          example: The Mall
        line3:
          type: string
          example: City of Westminster
        postTown:
          type: string
          example: London
        postCode:
          type: string
          example: SW1A 2WH
        countryCode:
          type: string
          description:
            "Country code in ISO 3166-1 alpha-2. NB GB is the official\
            \ country code for the UK. UK is not the officially assigned code, and\
            \ so is not valid"
          example: GB
      description: Physical address of account holder
    Individual:
      type: object
      properties:
        title:
          type: string
          example: Mr
        firstName:
          type: string
          example: Dave
        lastName:
          type: string
          example: Bowman
        dateOfBirth:
          type: string
          format: date
          example: 1968-04-02
        email:
          type: string
          example: dave.bowman@example.com
        phone:
          type: string
          example: "+447700900123"
      description: Information about an individual account holder
    UpdateEmailRequest:
      required:
        - email
      type: object
      properties:
        email:
          type: string
          description: The new email address for the account holder
          example: dave.bowman@example.com
    CategoryDescription:
      type: object
      properties:
        locale:
          type: string
          description: Locale
          example: en_GB
        displayText:
          type: string
          description: Display text
          example: Financial services and products
      description: Response object contain category description
    SpendingCounterPartyBreakdown:
      type: object
      properties:
        counterPartyUid:
          type: string
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        counterPartyType:
          type: string
          description: The type of counter party for a transaction
          example: MERCHANT
          enum:
            - CATEGORY
            - CHEQUE
            - CUSTOMER
            - PAYEE
            - MERCHANT
            - SENDER
            - STARLING
            - LOAN
        counterPartyName:
          type: string
          example: Tesco
        totalSpent:
          minimum: 0
          type: number
          description: Amount spent at/sent to this counter party
          example: 123.45
        totalReceived:
          minimum: 0
          type: number
          description: Amount received from this counter party
          example: 23.45
        netSpend:
          minimum: 0
          type: number
          example: 100.0
        netDirection:
          type: string
          description: Was this an inbound or outbound transaction
          example: OUT
          enum:
            - IN
            - OUT
        currency:
          type: string
          example: GBP
          enum:
            - UNDEFINED
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RUR
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SLE
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XCG
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
            - ZWG
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description:
            Percentage that the netSpend makes up of the sum of the netSpends
            of breakdowns in the same period with the same netDirection
          example: 100.0
        transactionCount:
          minimum: 0
          type: integer
          format: int64
          example: 4
      description: Spending insights entry for a counter party
    SpendingCounterPartySummary:
      type: object
      properties:
        period:
          type: string
          example: 2023-01
        totalSpent:
          type: number
          description: Amount spent from the account in the month
          example: 1873.27
        totalReceived:
          type: number
          description: Amount received to the account in the month
          example: 3837.03
        netSpend:
          type: number
          description:
            "|totalReceived - totalSpent|, i.e. how much the balance has\
            \ changed in the month"
          example: 1963.76
        totalSpendNetOut:
          type: number
          description:
            Sum of netSpend for counter parties whose net direction for
            the month is OUT
          example: 212.35
        totalReceivedNetIn:
          type: number
          description:
            Sum of netSpend for counter parties whose net direction for
            the month is IN
          example: 2176.11
        currency:
          type: string
          example: GBP
          enum:
            - UNDEFINED
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RUR
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SLE
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XCG
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
            - ZWG
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          example: IN
          enum:
            - IN
            - OUT
        breakdown:
          type: array
          items:
            $ref: "#/components/schemas/SpendingCounterPartyBreakdown"
      description: "Spending insights for a month, grouped by counter party"
    SpendingCategoryBreakdown:
      type: object
      properties:
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
        totalSpent:
          minimum: 0
          type: number
          description: Amount spent under this spending category
          example: 123.45
        totalReceived:
          minimum: 0
          type: number
          description: Amount received under this spending category
          example: 23.45
        netSpend:
          minimum: 0
          type: number
          example: 100.0
        netDirection:
          type: string
          description: Was this an inbound or outbound transaction
          example: OUT
          enum:
            - IN
            - OUT
        currency:
          type: string
          example: GBP
          enum:
            - UNDEFINED
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RUR
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SLE
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XCG
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
            - ZWG
        percentage:
          maximum: 100
          minimum: 0
          type: number
          description:
            Percentage that the netSpend makes up of the sum of the netSpends
            of breakdowns in the same period with the same netDirection
          example: 100.0
        transactionCount:
          minimum: 0
          type: integer
          format: int64
          example: 4
      description: Spending insights entry for a spending category
    SpendingCategorySummary:
      type: object
      properties:
        period:
          type: string
          example: 2023-01
        totalSpent:
          type: number
          description: Amount spent from the account in the month
          example: 1873.27
        totalReceived:
          type: number
          description: Amount received to the account in the month
          example: 3837.03
        netSpend:
          type: number
          description:
            "|totalReceived - totalSpent|, i.e. how much the balance has\
            \ changed in the month"
          example: 1963.76
        totalSpendNetOut:
          type: number
          description:
            Sum of netSpend for spending categories whose net direction
            for the month is OUT
          example: 212.35
        totalReceivedNetIn:
          type: number
          description:
            Sum of netSpend for spending categories whose net direction
            for the month is IN
          example: 2176.11
        currency:
          type: string
          example: GBP
          enum:
            - UNDEFINED
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RUR
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SLE
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XCG
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
            - ZWG
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          example: IN
          enum:
            - IN
            - OUT
        breakdown:
          type: array
          items:
            $ref: "#/components/schemas/SpendingCategoryBreakdown"
      description: "Spending insights for a month, grouped by spending category"
    CurrencyFlag:
      required:
        - currency
        - enabled
      type: object
      properties:
        enabled:
          type: boolean
        currency:
          minLength: 1
          type: string
      description: Whether spending is enabled on this card for the specified currency
    CurrencyAndAmount:
      required:
        - currency
        - minorUnits
      type: object
      properties:
        currency:
          minLength: 1
          type: string
          description: ISO-4217 3 character currency code
          example: GBP
        minorUnits:
          minimum: 0
          type: integer
          description:
            "Amount in the minor units of the given currency; eg pence\
            \ in GBP, cents in EUR"
          format: int64
          example: 123456
      description: Representation of money
    DirectDebitMandateV2:
      type: object
      properties:
        uid:
          type: string
          format: uuid
          example: eeffeeff-eeff-eeff-eeff-eeffeeffeeff
        reference:
          type: string
          example: Accommodation
        status:
          type: string
          example: LIVE
          enum:
            - CANCELLED
            - LIVE
            - PENDING_CAS
        source:
          type: string
          example: ELECTRONIC
          enum:
            - ELECTRONIC
            - PAPER
        created:
          type: string
          format: date-time
          example: 2019-04-16T11:47:50.477Z
        cancelled:
          type: string
          format: date-time
        nextDate:
          type: string
          format: date
          example: 2020-04-16
        lastDate:
          type: string
          format: date
          example: 2020-03-16
        originatorName:
          type: string
          example: University Of Warwick
        originatorUid:
          type: string
          format: uuid
          example: ff11ff11-ff11-ff11-ff11-ff11ff11ff11
        merchantUid:
          type: string
          format: uuid
          example: 80ba691d-10a6-432c-90be-6ceaf932410e
        lastPayment:
          $ref: "#/components/schemas/LastPayment"
        accountUid:
          type: string
          format: uuid
          example: 323ac478-11a7-232d-90ae-7ceaf832330e
        categoryUid:
          type: string
          format: uuid
          example: null
      description: Single mandate
    LastPayment:
      type: object
      properties:
        lastDate:
          type: string
          format: date
          example: 2020-03-16
        lastAmount:
          $ref: "#/components/schemas/CurrencyAndAmount"
      description: Last direct debit payment
      nullable: true
    UpdateSpendingCategory:
      required:
        - spendingCategory
      type: object
      properties:
        spendingCategory:
          type: string
          description: The category of a transaction
          example: GROCERIES
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
        permanentSpendingCategoryUpdate:
          type: boolean
          example: false
        previousSpendingCategoryReferencesUpdate:
          type: boolean
          example: false
    AssociatedFeedRoundUp:
      type: object
      properties:
        goalCategoryUid:
          type: string
          description: Unique identifier of associated category
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
      description: Round up details associated with a feed item
    BatchPaymentDetails:
      type: object
      properties:
        batchPaymentUid:
          type: string
          description: The unique identifier for the batch payment
          format: uuid
          example: 5fedd7fa-c670-4ca8-9fcb-a77a6f2219c5
        batchPaymentType:
          type: string
          description: The type of the batch payment itself
          enum:
            - BULK_PAYMENT
      description: "The details of the batch payment this is part of, if it is"
    FeedItem:
      type: object
      properties:
        feedItemUid:
          type: string
          description: Unique identifier for this item
          format: uuid
          example: 11221122-1122-1122-1122-112211221122
        categoryUid:
          type: string
          description: The category on which the transaction happened
          format: uuid
          example: ccddccdd-ccdd-ccdd-ccdd-ccddccddccdd
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        sourceAmount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        direction:
          type: string
          description: Was this an inbound or outbound transaction
          enum:
            - IN
            - OUT
        updatedAt:
          type: string
          description: The time the transaction was last updated at
          format: date-time
        transactionTime:
          type: string
          description: The time of the transaction
          format: date-time
        settlementTime:
          type: string
          description: The time the transaction settled
          format: date-time
        retryAllocationUntilTime:
          type: string
          format: date-time
        source:
          type: string
          description: The source of a transaction
          example: MASTER_CARD
          enum:
            - BRITISH_BUSINESS_BANK_FEES
            - CARD_FEE_CHARGE
            - CASH_DEPOSIT
            - CASH_DEPOSIT_CHARGE
            - CASH_WITHDRAWAL
            - CASH_WITHDRAWAL_CHARGE
            - CHAPS
            - CHEQUE
            - CICS_CHEQUE
            - CURRENCY_CLOUD
            - DIRECT_CREDIT
            - DIRECT_DEBIT
            - DIRECT_DEBIT_DISPUTE
            - INTERNAL_TRANSFER
            - MASTER_CARD
            - MASTERCARD_MONEYSEND
            - MASTERCARD_CHARGEBACK
            - MISSED_PAYMENT_FEE
            - FASTER_PAYMENTS_IN
            - FASTER_PAYMENTS_OUT
            - FASTER_PAYMENTS_REVERSAL
            - STRIPE_FUNDING
            - INTEREST_PAYMENT
            - NOSTRO_DEPOSIT
            - OVERDRAFT
            - OVERDRAFT_INTEREST_WAIVED
            - FASTER_PAYMENTS_REFUND
            - STARLING_PAY_STRIPE
            - ON_US_PAY_ME
            - LOAN_PRINCIPAL_PAYMENT
            - LOAN_REPAYMENT
            - LOAN_OVERPAYMENT
            - LOAN_LATE_PAYMENT
            - LOAN_FEE_PAYMENT
            - LOAN_INTEREST_CHARGE
            - SEPA_CREDIT_TRANSFER
            - SEPA_DIRECT_DEBIT
            - TARGET2_CUSTOMER_PAYMENT
            - FX_TRANSFER
            - ISS_PAYMENT
            - STARLING_PAYMENT
            - SUBSCRIPTION_CHARGE
            - OVERDRAFT_FEE
            - WITHHELD_TAX
            - ERRORS_AND_OMISSIONS
            - INTEREST_V2_PAYMENT
        sourceSubType:
          type: string
          description: The source subtype of the transaction
          example: CONTACTLESS
          enum:
            - CONTACTLESS
            - MAGNETIC_STRIP
            - MANUAL_KEY_ENTRY
            - CHIP_AND_PIN
            - ONLINE
            - ATM
            - CREDIT_AUTH
            - APPLE_PAY
            - APPLE_PAY_ONLINE
            - ANDROID_PAY
            - ANDROID_PAY_ONLINE
            - FITBIT_PAY
            - GARMIN_PAY
            - SAMSUNG_PAY
            - CLICK_TO_PAY
            - OTHER_WALLET
            - CARD_SUBSCRIPTION
            - NOT_APPLICABLE
            - UNKNOWN
            - DEPOSIT
            - OVERDRAFT
            - SETTLE_UP
            - NEARBY
            - TRANSFER_SAME_CURRENCY
            - NEW_CARD
            - NEW_CARD_OVERSEAS
        status:
          type: string
          description: The status of a transaction
          example: PENDING
          enum:
            - UPCOMING
            - UPCOMING_CANCELLED
            - PENDING
            - REVERSED
            - SETTLED
            - DECLINED
            - REFUNDED
            - RETRYING
            - ACCOUNT_CHECK
        transactingApplicationUserUid:
          type: string
          description: The application user that made the transaction
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        counterPartyType:
          type: string
          description: The type of counter party for a transaction
          example: MERCHANT
          enum:
            - CATEGORY
            - CHEQUE
            - CUSTOMER
            - PAYEE
            - MERCHANT
            - SENDER
            - STARLING
            - LOAN
        counterPartyUid:
          type: string
          description:
            "The unique identifier for the counter party. eg for MERCHANT\
            \ this will be the merchant uid, for PAYEE this will be the payee uid"
          format: uuid
          example: 68e16af4-c2c3-413b-bf93-1056b90097fa
        counterPartyName:
          type: string
          description: The name of the counter party
          example: Tesco
        counterPartySubEntityUid:
          type: string
          description:
            "An identifier for the counter party sub entity. eg for MERCHANT\
            \ this will be the merchant location uid, for PAYEE this will be the payee\
            \ account uid"
          format: uuid
          example: 35d46207-d90e-483c-a40a-128cc4da4bee
        counterPartySubEntityName:
          type: string
          description:
            "A name for the counter party sub entity, for PAYEE this will\
            \ be the name set for the payee account"
          example: Tesco Southampton
        counterPartySubEntityIdentifier:
          type: string
          description:
            "An external identifier for the sub entity, for PAYEE this\
            \ will be the sort code of the account"
          example: "608371"
        counterPartySubEntitySubIdentifier:
          type: string
          description:
            "An external sub identifier for the sub entity, for PAYEE this\
            \ will be the account number of the account"
          example: "01234567"
        exchangeRate:
          type: number
        totalFees:
          type: number
        totalFeeAmount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        reference:
          type: string
          description: The reference for the transaction
          example: TESCO-STORES-6148      SOUTHAMPTON   GBR
        country:
          type: string
          description:
            The country in which the transaction took place. ISO 3166-1
            alpha-2
          example: GB
          enum:
            - UNDEFINED
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BU
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CP
            - CR
            - CS
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DG
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EA
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - EU
            - EZ
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - FX
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - IC
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - "NO"
            - NP
            - NR
            - NT
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SF
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SU
            - SV
            - SX
            - SY
            - SZ
            - TA
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UK
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - XI
            - XU
            - XK
            - XX
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZR
            - ZW
        spendingCategory:
          type: string
          description: The category of a transaction
          example: GROCERIES
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
        userNote:
          type: string
          description: The user-provided transaction note
          example: "Tax deductable, submit me to payroll"
        roundUp:
          $ref: "#/components/schemas/AssociatedFeedRoundUp"
        hasAttachment:
          type: boolean
          description: Attachment present
          example: true
        hasReceipt:
          type: boolean
          description: Receipt present
          example: true
        batchPaymentDetails:
          $ref: "#/components/schemas/BatchPaymentDetails"
      description: An item from the account holders's transaction feed
    FeedItemAttachment:
      type: object
      properties:
        feedItemUid:
          type: string
          format: uuid
          example: 22332233-2233-2233-2233-223322332233
        feedItemAttachmentUid:
          type: string
          format: uuid
          example: 11221122-1122-1122-1122-112211221122
        attachmentType:
          type: string
          example: image
          enum:
            - "image, pdf"
        feedItemAttachmentType:
          type: string
          example: IMAGE
          enum:
            - IMAGE
            - PDF
            - "IMAGE, PDF"
    FeedItemAttachments:
      type: object
      properties:
        feedItemAttachments:
          type: array
          items:
            $ref: "#/components/schemas/FeedItemAttachment"
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    MastercardFeedItem:
      type: object
      properties:
        merchantIdentifier:
          type: string
        mcc:
          type: integer
          format: int32
        posTimestamp:
          $ref: "#/components/schemas/LocalTime"
        authorisationCode:
          type: string
        cardLast4:
          type: string
    FeedItems:
      type: object
      properties:
        feedItems:
          type: array
          items:
            $ref: "#/components/schemas/FeedItem"
      description: Wrapper around multiple feed items
    RoundUpGoalPayload:
      required:
        - roundUpGoalUid
        - roundUpMultiplier
      type: object
      properties:
        roundUpGoalUid:
          type: string
          description: UID of the account category to send round-ups to
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        roundUpMultiplier:
          maximum: 10
          minimum: 1
          type: integer
          description:
            How much to multiply the rounded-up amount by before transfer.
            Must be an integer between 1 and 10 (inclusive)
          format: int32
          example: 2
    RoundUpGoalDetails:
      required:
        - activatedAt
        - activatedBy
        - primaryCategoryUid
        - roundUpGoalUid
        - roundUpMultiplier
      type: object
      properties:
        primaryCategoryUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        roundUpGoalUid:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        roundUpMultiplier:
          minimum: 1.0
          exclusiveMinimum: false
          type: number
        activatedAt:
          type: string
          format: date-time
        activatedBy:
          type: string
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
    RoundUpGoalResponse:
      type: object
      properties:
        active:
          type: boolean
        roundUpGoal:
          $ref: "#/components/schemas/RoundUpGoalDetails"
        roundUpGoalDetails:
          $ref: "#/components/schemas/RoundUpGoalDetails"
    IdentityV2:
      type: object
      properties:
        accountHolderUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        expiresAt:
          type: string
          format: date-time
        expiresInSeconds:
          type: integer
          format: int64
          example: 123
        scopes:
          type: array
          description: The scopes which this token has permission to use e.g. balance:read
          items:
            type: string
            description: The scopes which this token has permission to use e.g. balance:read
        authenticated:
          type: boolean
        applicationUserUid:
          type: string
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
        consentExpiresAt:
          type: string
          format: date-time
        customerUid:
          type: string
          description: "Deprecated, use accountHolderUid instead"
          format: uuid
          example: aabbaabb-aabb-aabb-aabb-aabbaabbaabb
          deprecated: true
    CreateStandingOrderResponse:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description:
            The uid of the payment order created by the standing order.
            N.B. this will not be the uid of any payment which is created by the standing
            order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
      description: Response after attempting to create a standing order
    CreateStandingOrderRequest:
      required:
        - amount
        - externalIdentifier
        - reference
        - standingOrderRecurrence
      type: object
      properties:
        externalIdentifier:
          maxLength: 100
          minLength: 0
          type: string
          description: External identifier for the standing order request
          example: a unique identifier to ensure idempotency
        destinationPayeeAccountUid:
          type: string
          description:
            The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid
            must be present
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        paymentRecipient:
          $ref: "#/components/schemas/PaymentRecipient"
        reference:
          maxLength: 18
          minLength: 1
          pattern: '[a-zA-Z0-9-/?:().,+#=!%&*<>;{@ "'']{1,18}'
          type: string
          description: The payment reference
          example: Monthly Expenses
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        standingOrderRecurrence:
          $ref: "#/components/schemas/StandingOrderRecurrence"
        spendingCategory:
          type: string
          description: The category of a transaction
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
      description: Request to create a standing order
    PaymentRecipient:
      required:
        - accountIdentifier
        - bankIdentifier
        - bankIdentifierType
        - countryCode
        - payeeName
        - payeeType
      type: object
      properties:
        payeeName:
          maxLength: 255
          minLength: 1
          type: string
          example: Bob Smith
        payeeType:
          type: string
          example: INDIVIDUAL
          enum:
            - BUSINESS
            - INDIVIDUAL
        countryCode:
          type: string
          description: The country code for the account (ISO 3166-1 alpha-2)
          example: GB
        accountIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          example: "12345678"
        bankIdentifier:
          maxLength: 34
          minLength: 0
          type: string
          example: "123456"
        bankIdentifierType:
          type: string
          example: SORT_CODE
          enum:
            - SORT_CODE
            - SWIFT
            - IBAN
            - ABA
            - ABA_WIRE
            - ABA_ACH
            - BSB
      description:
        The desired payment recipient. Either paymentRecipient or destinationPayeeAccountUid
        must be present
    StandingOrderRecurrence:
      required:
        - frequency
        - startDate
      type: object
      properties:
        startDate:
          type: string
          description: Date that the first standing order payment should be made
          format: date
          example: 2019-09-23
        frequency:
          type: string
          description: Frequency of which payments should be made
          example: WEEKLY
          enum:
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
        interval:
          maximum: 20
          minimum: 1
          type: integer
          description:
            Interval of specified frequency on which payments should be
            made
          format: int32
          nullable: true
          example: 4
        count:
          maximum: 100
          minimum: 1
          type: integer
          description:
            Number of payments that should be made before standing order
            is stopped
          format: int32
          nullable: true
          example: 12
        untilDate:
          type: string
          description: Date on which to stop standing order
          format: date
          example: 2020-09-23
      description: Recurrence rules of a standing order
    PaymentOrderV2:
      required:
        - amount
        - payeeAccountUid
        - payeeUid
        - paymentOrderUid
        - reference
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: UID of this payment order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        reference:
          type: string
          description: The reference set by the payer
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving this payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving this payment
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        spendingCategory:
          type: string
          description: The category of a transaction
          nullable: true
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
      description: Response object for payment order queries
    PaymentOrderPayment:
      required:
        - amount
        - createdAt
        - payeeAccountUid
        - payeeUid
        - paymentUid
        - reference
      type: object
      properties:
        paymentUid:
          type: string
          description: UID of this payment
          format: uuid
          example: 44554455-4455-4455-4455-445544554455
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        reference:
          type: string
          description: Reference of this payment
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving this payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving this payment
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        createdAt:
          type: string
          description: When this payment was created
          format: date-time
        completedAt:
          type: string
          description: "When this payment was completed, if it completed"
          format: date-time
        rejectedAt:
          type: string
          description: "When this payment was rejected, if it was rejected"
          format: date-time
        paymentStatusDetails:
          $ref: "#/components/schemas/PaymentStatusDetails"
      description: Response object for payment order payments queries
    PaymentOrderPaymentsResponse:
      required:
        - payments
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: "#/components/schemas/PaymentOrderPayment"
      description: List of payments associated with a payment order
    PaymentStatusDetails:
      type: object
      properties:
        paymentStatus:
          type: string
          enum:
            - ACCEPTED
            - REJECTED
            - PENDING
        description:
          type: string
          enum:
            - ACCEPTED
            - QUALIFIED_ACCEPT_WITHIN_TWO_HOURS
            - QUALIFIED_ACCEPT_UNSPECIFIED_DAY
            - QUALIFIED_ACCEPT_SAME_DAY
            - QUALIFIED_ACCEPT_NEXT_CALENDAR_DAY
            - QUALIFIED_ACCEPT_NEXT_WORKING_DAY
            - QUALIFIED_ACCEPT_AFTER_NEXT_WORKING_DAY
            - DESTINATION_ACCOUNT_INVALID
            - DESTINATION_ACCOUNT_NAME_MISMATCH
            - REFERENCE_INFORMATION_INCORRECT
            - DESTINATION_ACCOUNT_UNAVAILABLE
            - PENDING
      description: Status details of a payment
    StandingOrder:
      type: object
      properties:
        paymentOrderUid:
          type: string
          description: UID of this payment order
          format: uuid
          example: 33443344-3344-3344-3344-334433443344
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        reference:
          type: string
          description: The reference set by the payer
          example: Payment reference
        payeeUid:
          type: string
          description: The ID of the payee receiving the payments
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        payeeAccountUid:
          type: string
          description: The account ID of the payee account receiving the payments
          format: uuid
          example: 66776677-6677-6677-6677-667766776677
        standingOrderRecurrence:
          $ref: "#/components/schemas/StandingOrderRecurrence"
        nextDate:
          type: string
          description: Date on which the next standing order payment will be made
          format: date
          example: 2023-01-01
        cancelledAt:
          type: string
          description: The time the standing order is cancelled at
          format: date-time
          example: 2017-07-05T18:27:02.335Z
        updatedAt:
          type: string
          description: The time the standing order is updated at
          format: date-time
          example: 2017-07-05T18:27:02.335Z
        spendingCategory:
          type: string
          description: The category of a transaction
          nullable: true
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
        categoryUid:
          type: string
          description:
            The category ID of the category from which the payment will
            be sent
          format: uuid
          example: 11771177-1177-1177-1177-117711771177
      description: Response object for standing order queries
    NextPaymentDatesResponse:
      type: object
      properties:
        nextPaymentDates:
          type: array
          items:
            type: string
            format: date
            example: 2023-01-01
      description: List of next payment dates of a standing order
    Payments:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: "#/components/schemas/PayeePayment"
      description: List of payments
    ConsentInformation:
      type: object
      description:
        Denotes whether a request has been paused in order for the user
        to approve it.
    SavingsGoalTransferResponseV2:
      required:
        - transferUid
      type: object
      properties:
        transferUid:
          type: string
          description: Unique identifier for the transfer
          format: uuid
          example: 88998899-8899-8899-8899-889988998899
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
      description:
        Response after attempting to make an immediate or recurring transfer
        into/out of a savings goal.
    SavingsGoalRequestV2:
      required:
        - currency
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the savings goal
          example: Trip to Paris
        currency:
          maxLength: 3
          minLength: 3
          type: string
          description: ISO-4217 3 character currency code of the savings goal
          example: GBP
        target:
          $ref: "#/components/schemas/CurrencyAndAmount"
        base64EncodedPhoto:
          type: string
          description:
            A text (base 64) encoded picture to associate with the savings
            goal
      description: Request to create a new savings goal
    SavingsGoalV2:
      required:
        - state
      type: object
      properties:
        savingsGoalUid:
          type: string
          description: Unique identifier of the savings goal
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        name:
          type: string
          description: Name of the savings goal
          example: Trip to Paris
        target:
          $ref: "#/components/schemas/CurrencyAndAmount"
        totalSaved:
          $ref: "#/components/schemas/CurrencyAndAmount"
        savedPercentage:
          type: integer
          description: Percentage of target currently deposited in the savings goal
          format: int32
          example: 100
        state:
          type: string
          description: The state of the savings goal
          example: ACTIVE
          enum:
            - CREATING
            - ACTIVE
            - ARCHIVING
            - ARCHIVED
            - RESTORING
            - PENDING
      description: A goal defined by an account holder to hold savings
    SavingsGoalPhotoV2:
      required:
        - base64EncodedPhoto
      type: object
      properties:
        base64EncodedPhoto:
          minLength: 1
          type: string
          description:
            A text (base 64) encoded picture to associate with the savings
            goal
      description: A photo associated to a savings goal
    SavingsGoalsV2:
      required:
        - savingsGoalList
      type: object
      properties:
        savingsGoalList:
          type: array
          items:
            $ref: "#/components/schemas/SavingsGoalV2"
      description: A list containing all savings goals for account holder
    CreateOrUpdateSavingsGoalResponseV2:
      type: object
      properties:
        savingsGoalUid:
          type: string
          description: Unique identifier of the savings goal
          format: uuid
          example: 77887788-7788-7788-7788-778877887788
        success:
          type: boolean
          description: True if the method completed successfully
          example: true
      description: Response after attempting to create a savings goal
    PayeePayment:
      type: object
      properties:
        paymentUid:
          type: string
          description: Unique identifier of the payment
          format: uuid
          example: 55665566-5566-5566-5566-556655665566
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
        reference:
          type: string
          description: Payment reference
          example: Rent
        createdAt:
          type: string
          description: Date when payment was created
          format: date-time
        spendingCategory:
          type: string
          description: The category of a transaction
          example: HOME
          enum:
            - BIKE
            - BILLS_AND_SERVICES
            - BUCKET_LIST
            - CAR
            - CASH
            - CELEBRATION
            - CHARITY
            - CHILDREN
            - CLOTHES
            - COFFEE
            - DEBT_REPAYMENT
            - DIY
            - DRINKS
            - EATING_OUT
            - EDUCATION
            - EMERGENCY
            - ENTERTAINMENT
            - ESSENTIAL_SPEND
            - EXPENSES
            - FAMILY
            - FITNESS
            - FUEL
            - GAMBLING
            - GAMING
            - GARDEN
            - GENERAL
            - GIFTS
            - GROCERIES
            - HOBBY
            - HOLIDAYS
            - HOME
            - IMPULSE_BUY
            - INCOME
            - INSURANCE
            - INVESTMENTS
            - LIFESTYLE
            - MAINTENANCE_AND_REPAIRS
            - MEDICAL
            - MORTGAGE
            - NON_ESSENTIAL_SPEND
            - PAYMENTS
            - PERSONAL_CARE
            - PERSONAL_TRANSFERS
            - PETS
            - PROJECTS
            - RELATIONSHIPS
            - RENT
            - SAVING
            - SHOPPING
            - SUBSCRIPTIONS
            - TAKEAWAY
            - TAXI
            - TRANSPORT
            - TREATS
            - WEDDING
            - WELLBEING
            - NONE
            - REVENUE
            - OTHER_INCOME
            - CLIENT_REFUNDS
            - INVENTORY
            - STAFF
            - TRAVEL
            - WORKPLACE
            - REPAIRS_AND_MAINTENANCE
            - ADMIN
            - MARKETING
            - BUSINESS_ENTERTAINMENT
            - INTEREST_PAYMENTS
            - BANK_CHARGES
            - OTHER
            - FOOD_AND_DRINK
            - EQUIPMENT
            - PROFESSIONAL_SERVICES
            - PHONE_AND_INTERNET
            - VEHICLES
            - DIRECTORS_WAGES
            - VAT
            - CORPORATION_TAX
            - SELF_ASSESSMENT_TAX
            - INVESTMENT_CAPITAL
            - TRANSFERS
            - LOAN_PRINCIPAL
            - PERSONAL
            - DIVIDENDS
        paymentAmount:
          $ref: "#/components/schemas/CurrencyAndAmount"
      description: A sent payment

    SpendingSpace:
      required:
        - balance
        - cardAssociationUid
        - name
        - spaceUid
        - spendingSpaceType
        - state
      type: object
      properties:
        uid:
          type: string
          format: uuid
          writeOnly: true
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        name:
          minLength: 1
          type: string
          description: Name of the space
          example: Shopping
        balance:
          $ref: "#/components/schemas/CurrencyAndAmount"
        cardAssociationUid:
          type: string
          description: Card Association Uid
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
        sortOrder:
          type: integer
          description: Sort Order
          format: int32
        spendingSpaceType:
          type: string
          description: Spending Space Type
          enum:
            - SHOPPING
            - CHILDCARE
            - HELPING_OUT
            - YOUNG_PERSON
            - EXPENSE
            - SPARE_CARD
            - CHILDCARE_V2
            - SHOPPING_V2
            - SPARE
        state:
          type: string
          description: The state of the spending space
          example: ACTIVE
          enum:
            - CREATING
            - ACTIVE
            - ARCHIVING
            - ARCHIVED
            - RESTORING
            - PENDING
        spaceUid:
          type: string
          description: SpendingSpaceUid
          format: uuid
          example: aaaaaaaa-aaaa-4aaa-aaaa-aaaaaaaaaaaa
    TopUpRequestV2:
      required:
        - amount
      type: object
      properties:
        amount:
          $ref: "#/components/schemas/CurrencyAndAmount"
      description: Request to make an immediate transfer into a savings goal

  securitySchemes:
    BearerAndSignature:
      type: http
      scheme: bearerAndSignature
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
